/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import DAO.BanAnDAO;
import DAO.HoaDonDAO;
import DAO.HoaDonDAO1;
import DAO.PhieuDatDAO;
import Helper.DateHelper;
import Helper.DialogHelper;
import Helper.JdbcHelper;
import Helper.ShareHelper;
import Model.HoaDon;
import Model.HoaDon1;
import Model.PhieuDat;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.regex.Pattern;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ADMIN
 */
public class PhieuDat_Form extends javax.swing.JFrame {

    /**
     * Creates new form PhieuDat
     */
    PhieuDatDAO dao = new PhieuDatDAO();
    int index = 0;
    BanAnDAO BADao = new BanAnDAO();
    HoaDonDAO1 hdDao = new HoaDonDAO1();

    public PhieuDat_Form() {
        initComponents();
        setLocationRelativeTo(null);
        LoadTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void LoadText() {
        try {

            String sql = "select Hoten,SDT,DateBook,TimeBook,SoNguoi,GhiChu,MaPD\n"
                    + "from PhieuDat inner join ThongTinKH on PhieuDat.MaKH=ThongTinKH.MaKH\n"
                    + "where MaPD=?";
            ResultSet rs = JdbcHelper.executeQuery(sql, lblMaPD.getText());
            while (rs.next()) {
                lblHoTen.setText(rs.getString("Hoten"));
                lblSDT.setText(rs.getString("SDT"));
                txtGhiChu.setText(rs.getString("GhiChu"));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    void edit() {
        try {
            int a = Integer.parseInt(tblDonDat.getValueAt(index, 0) + "");
            PhieuDat model = dao.findById(a);
            if (model != null) {
                this.setModel(model);
                this.setStatus(false);
                LoadText();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    void setStatus(boolean insertable) {
        boolean first = this.index > 0;
        boolean last = this.index < tblDonDat.getRowCount() - 1;
    }

    void setModel(PhieuDat model) {
        lblMaPD.setText(String.valueOf(model.getMaPD()));
        txtNgayDat.setDate(model.getDateBook());
        String gio = DateHelper.timetoString(model.getTimeBook());
        cboTimeBook.setSelectedItem(gio);
        txtSoNguoi.setText(String.valueOf(model.getSoNguoi()));
        txtGhiChu.setText(model.getGhiChu());
        if (model.getTrangThai().equals("Chờ xác nhận")) {
            lblTrangThai.setText("Chờ xác nhận");
            btnXacNhan.setEnabled(true);
            btnTaoHoaDon.setEnabled(false);
            btnCapNhat.setEnabled(true);
        } else if (model.getTrangThai().equals("Đã xác nhận")) {
            String ngayXacNhan = DateHelper.toString(model.getDateXacNhan());
            String timeXacNhan = DateHelper.timetoString(model.getTimeXacNhan());
            lblTrangThai.setText("Đã xác nhận lúc: " + timeXacNhan + " ngày " + ngayXacNhan);
            btnTaoHoaDon.setEnabled(true);
            btnCapNhat.setEnabled(true);
        } else {
            String ngayThanhToan = DateHelper.toString(model.getDateThanhToan());
            String timeThanhToan = DateHelper.timetoString(model.getTimeThanToan());
            lblTrangThai.setText(model.getTrangThai() + " lúc: " + timeThanhToan + " ngày " + ngayThanhToan);
            btnTaoHoaDon.setEnabled(false);
            btnCapNhat.setEnabled(false);
        }
    }

    PhieuDat getmodel1() {
        PhieuDat model = new PhieuDat();
        model.setMaPD(Integer.parseInt(lblMaPD.getText()));
        model.setTrangThai("Đã xác nhận");
        java.util.Date date = new java.util.Date();
        String timeXN = fm.format(date);
        String dateXN = date_fm.format(date);
        model.setTimeXacNhan(DateHelper.toTime(timeXN));
        model.setDateXacNhan(DateHelper.toDate(dateXN));
        return model;
    }

    PhieuDat getmodelPD() {
        PhieuDat model = new PhieuDat();
//        String a =String.valueOf(tbl_PhieuDat.getValueAt(index, 7));
//        model.setTrangThai(a);
        model.setMaPD(Integer.parseInt(lblMaPD.getText()));
        model.setDateBook(txtNgayDat.getDate());
        String gio = (String) cboTimeBook.getSelectedItem();
        model.setTimeBook(DateHelper.toTime(gio));
        model.setGhiChu(txtGhiChu.getText());
        model.setSoBan(Integer.parseInt(cboBanAn.getSelectedItem() + ""));
        model.setSoNguoi(Integer.parseInt(txtSoNguoi.getText()));
//        model.setTimeXacNhan(Time.valueOf(lb_TimeXacNhan.getText()));
        return model;
    }

    void XacNhan() {
        PhieuDat model = getmodel1();
        try {
            dao.update1(model);
            DialogHelper.alert(this, "Xác nhận thành công");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    void UpdatePD() {
        PhieuDat model = getmodelPD();
        try {
            dao.update(model);
            DialogHelper.alert(this, "Thay đổi thành công");
            LoadText();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    HoaDon1 GetModel() {
        HoaDon1 model = new HoaDon1();
        model.setMaPD(Integer.parseInt(lblMaPD.getText()));
        model.setSoBan(Integer.parseInt(cboBanAn.getSelectedItem() + ""));
        model.setNgayAn(txtNgayDat.getDate());
        model.setTongTien(0.0);
        if (ShareHelper.USER != null) {
            model.setNguoiTao(ShareHelper.USER.getUsername());
        }

        return model;
    }

    void Insert() {
        HoaDon1 model = GetModel();
        try {
            hdDao.insert(model);
            DialogHelper.alert(this, " Thành Công");
            Clear();
        } catch (Exception e) {
            e.printStackTrace();
            DialogHelper.alert(this, "Thất Bại");
        }
    }

    void Delete() {
        int id = Integer.parseInt(lblMaPD.getText());
        try {
            dao.delete1(id);
            DialogHelper.alert(this, "Xóa thành công");
            Clear();
            LoadTable();
            LoadText();
        } catch (Exception e) {
            e.printStackTrace();
            DialogHelper.alert(this, "Xóa Thất Bại");
        }
    }

    void Clear() {
        txtNgayDat.setDate(null);
        lblHoTen.setText("");
        lblSDT.setText("");
        cboTimeBook.setSelectedItem("08:30");
        cboBanAn.setSelectedItem("1");
        txtGhiChu.setText("");
        lblMaPD.setText("");
        txtSoNguoi.setText("");
        lblTrangThai.setText("");
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        tab = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        cboTrangThai = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDonDat = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        btnDSSapDen = new javax.swing.JButton();
        btnDSQuaGio = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        btnCapNhat = new javax.swing.JButton();
        btnXacNhan = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnTaoHoaDon = new javax.swing.JButton();
        btnHuy = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        lblMaPD = new javax.swing.JLabel();
        txtSoNguoi = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txtGhiChu = new javax.swing.JTextArea();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        txtNgayDat = new com.toedter.calendar.JDateChooser();
        jLabel21 = new javax.swing.JLabel();
        cboBanAn = new javax.swing.JComboBox<>();
        jLabel22 = new javax.swing.JLabel();
        lblTrangThai = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        lblSDT = new javax.swing.JLabel();
        lblHoTen = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        cboTimeBook = new javax.swing.JComboBox<>();
        jButton5 = new javax.swing.JButton();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tab.setBackground(new java.awt.Color(150, 150, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        cboTrangThai.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        cboTrangThai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chờ xác nhận", "Đã xác nhận", "Đã thanh toán" }));
        cboTrangThai.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboTrangThaiItemStateChanged(evt);
            }
        });
        cboTrangThai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTrangThaiActionPerformed(evt);
            }
        });

        tblDonDat.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        tblDonDat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MaPD", "MaKH", "Ngày Đặt", "Thời Gian", "Số Bàn", "Số Người", "Ghi Chú"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDonDat.setRowHeight(30);
        tblDonDat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDonDatMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDonDat);

        jLabel4.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        jLabel4.setText("Trạng thái:");

        btnDSSapDen.setBackground(new java.awt.Color(255, 255, 255));
        btnDSSapDen.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        btnDSSapDen.setText("Danh sách khách sắp đến");
        btnDSSapDen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDSSapDenActionPerformed(evt);
            }
        });

        btnDSQuaGio.setBackground(new java.awt.Color(255, 255, 255));
        btnDSQuaGio.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        btnDSQuaGio.setText("Danh sách khách quá giờ");
        btnDSQuaGio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDSQuaGioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboTrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 324, Short.MAX_VALUE)
                        .addComponent(btnDSSapDen)
                        .addGap(18, 18, 18)
                        .addComponent(btnDSQuaGio)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(cboTrangThai, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 436, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDSSapDen)
                    .addComponent(btnDSQuaGio))
                .addGap(16, 16, 16))
        );

        tab.addTab("Danh sách phiếu đặt", jPanel1);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        btnCapNhat.setBackground(new java.awt.Color(255, 255, 255));
        btnCapNhat.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        btnCapNhat.setText("Cập nhật");
        btnCapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhatActionPerformed(evt);
            }
        });

        btnXacNhan.setBackground(new java.awt.Color(255, 255, 255));
        btnXacNhan.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        btnXacNhan.setText("Xác Nhận");
        btnXacNhan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXacNhanActionPerformed(evt);
            }
        });

        btnClear.setBackground(new java.awt.Color(255, 255, 255));
        btnClear.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnTaoHoaDon.setBackground(new java.awt.Color(255, 255, 255));
        btnTaoHoaDon.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        btnTaoHoaDon.setText("Tạo Hóa Đơn");
        btnTaoHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaoHoaDonActionPerformed(evt);
            }
        });

        btnHuy.setBackground(new java.awt.Color(255, 255, 255));
        btnHuy.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        btnHuy.setText("Hủy");
        btnHuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        jLabel14.setText("Họ tên:");

        jLabel15.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        jLabel15.setText("Số người:");

        lblMaPD.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        lblMaPD.setText("MaPD");

        txtSoNguoi.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N

        jLabel16.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        jLabel16.setText("Giờ đặt:");

        jLabel17.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        jLabel17.setText("Ghi Chú:");

        txtGhiChu.setColumns(20);
        txtGhiChu.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        txtGhiChu.setRows(5);

        jLabel18.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        jLabel18.setText("SĐT   :");

        jLabel19.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        jLabel19.setText("Mã phiếu đặt:");

        jLabel20.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        jLabel20.setText("Ngày Đặt:");

        txtNgayDat.setDateFormatString("dd/MM/yyyy");
        txtNgayDat.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N

        jLabel21.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        jLabel21.setText("Số Bàn:");

        cboBanAn.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N

        jLabel22.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        jLabel22.setText("Trạng Thái:");

        lblTrangThai.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        lblTrangThai.setText("Đã xác nhận");

        jLabel24.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(51, 51, 255));
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel24.setText("THÔNG TIN ĐƠN ĐẶT");

        lblSDT.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        lblSDT.setText("0432423874198");

        lblHoTen.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        lblHoTen.setText("Nguyễn Văn A");

        jLabel25.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(51, 51, 255));
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setText("THÔNG TIN KHÁCH HÀNG");

        cboTimeBook.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        cboTimeBook.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "08:30", "09:00", "09:30", "10:00", "10:30", "11:00", "11:30", "12:00", "12:30", "13:00", "13:30", "14:00", "14:30", "15:00", "15:30", "16:00", "16:30", "17:00", "17:30", "18:00", "18:30", "19:00", "19:30", "20:00", "20:30", "21:00", "21:30", "22:00", "22:30", "23:00" }));
        cboTimeBook.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboTimeBookItemStateChanged(evt);
            }
        });
        cboTimeBook.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cboTimeBookMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(179, 179, 179)
                .addComponent(lblTrangThai)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jLabel21, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtGhiChu, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNgayDat, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cboTimeBook, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblMaPD, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtSoNguoi, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cboBanAn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel24)
                                .addGap(207, 207, 207)))
                        .addGap(70, 70, 70)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel25)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(btnXacNhan)
                                    .addGap(18, 18, 18)
                                    .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(btnCapNhat)
                                    .addGap(18, 18, 18)
                                    .addComponent(btnHuy, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 28, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnTaoHoaDon)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(jLabel25))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblMaPD, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNgayDat, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cboTimeBook, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cboBanAn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtSoNguoi, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnHuy, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCapNhat))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnClear)
                            .addComponent(btnXacNhan)))
                    .addComponent(txtGhiChu, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(btnTaoHoaDon)
                .addGap(53, 53, 53))
        );

        tab.addTab("Chi tiết phiếu đặt", jPanel2);

        jButton5.setBackground(new java.awt.Color(255, 255, 255));
        jButton5.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Home.png"))); // NOI18N
        jButton5.setText("Home");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tab)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tab, javax.swing.GroupLayout.PREFERRED_SIZE, 599, Short.MAX_VALUE)
                .addGap(3, 3, 3)
                .addComponent(jButton5))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    int i;
    private void tblDonDatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDonDatMouseClicked

        if (evt.getClickCount() == 2) {
            i = tblDonDat.getSelectedRow();
            this.index = tblDonDat.rowAtPoint(evt.getPoint());
            if (this.index >= 0) {
                fillComBoBoxSoBan();
                this.edit();
                LoadText();
//                if (lb_TimeXacNhan.equals("null")) {
//                    lb_TimeXacNhan.setText("");
//                }
                DefaultComboBoxModel model = (DefaultComboBoxModel) cboBanAn.getModel();
                model.setSelectedItem(tblDonDat.getValueAt(this.index, 4));

                tab.setSelectedIndex(1);

            }
        }
    }//GEN-LAST:event_tblDonDatMouseClicked

    private void btnXacNhanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXacNhanActionPerformed
        if (check() == false) {
            XacNhan();
            Cbb();
        }
    }//GEN-LAST:event_btnXacNhanActionPerformed

    private void btnCapNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhatActionPerformed
        if (check() == false) {
            UpdatePD();
            Cbb();
            tab.setSelectedIndex(0);
            tblDonDat.setRowSelectionInterval(i, i);
        }

    }//GEN-LAST:event_btnCapNhatActionPerformed

    private void btnHuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyActionPerformed
        if (check() == false) {
            if (DialogHelper.confirm(this, "Bạn có muốn hủy đơn này không?")) {
                Delete();
                Cbb();
                tab.setSelectedIndex(0);
            }
        }
    }//GEN-LAST:event_btnHuyActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        Clear();
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnTaoHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaoHoaDonActionPerformed
        if (check() == false) {
            Insert();
            new QuanLyHoaDon().setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_btnTaoHoaDonActionPerformed

    private void cboTrangThaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTrangThaiActionPerformed
        Cbb();
    }//GEN-LAST:event_cboTrangThaiActionPerformed

    private void cboTimeBookMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cboTimeBookMouseClicked
        fillComBoBoxSoBan();
    }//GEN-LAST:event_cboTimeBookMouseClicked

    private void cboTimeBookItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboTimeBookItemStateChanged
        fillComBoBoxSoBan();
    }//GEN-LAST:event_cboTimeBookItemStateChanged

    private void cboTrangThaiItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboTrangThaiItemStateChanged
        Cbb();
    }//GEN-LAST:event_cboTrangThaiItemStateChanged

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        new HomeNhaHang().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void btnDSSapDenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDSSapDenActionPerformed
        LoadDSSapDen();
        btnHuy.setEnabled(false);
        btnXacNhan.setEnabled(false);
        btnTaoHoaDon.setEnabled(true);
    }//GEN-LAST:event_btnDSSapDenActionPerformed

    private void btnDSQuaGioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDSQuaGioActionPerformed
        LoadDSQuaGio();
        btnHuy.setEnabled(true);
        btnXacNhan.setEnabled(false);
        btnTaoHoaDon.setEnabled(true);
    }//GEN-LAST:event_btnDSQuaGioActionPerformed

    /**
     * @param args the command line arguments
     */
    SimpleDateFormat fm = new SimpleDateFormat("HH:mm");
    SimpleDateFormat date_fm = new SimpleDateFormat("dd/MM/yyyy");

    void LoadTable() {
        DefaultTableModel model = (DefaultTableModel) tblDonDat.getModel();
        model.setRowCount(0);
        try {
            List<PhieuDat> list = dao.select();
            for (PhieuDat cd : list) {
                Object[] obj = {
                    cd.getMaPD(),
                    cd.getMaKH(),
                    date_fm.format(cd.getDateBook()),
                    fm.format(cd.getTimeBook()),
                    cd.getSoBan(),
                    cd.getSoNguoi(),
                    cd.getGhiChu(),};
                model.addRow(obj);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    void LoadDSSapDen() {
        DefaultTableModel model = (DefaultTableModel) tblDonDat.getModel();
        model.setRowCount(0);
        try {
            java.util.Date date = new java.util.Date();
            String timenow = fm.format(date);
            String datenow = DateHelper.toString1(date);
            List<PhieuDat> list = dao.select(datenow, timenow);
            if (list != null) {
                for (PhieuDat cd : list) {
                    Object[] obj = {
                        cd.getMaPD(),
                        cd.getMaKH(),
                        date_fm.format(cd.getDateBook()),
                        fm.format(cd.getTimeBook()),
                        cd.getSoBan(),
                        cd.getSoNguoi(),
                        cd.getGhiChu(),};
                    model.addRow(obj);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    void LoadDSQuaGio() {
        DefaultTableModel model = (DefaultTableModel) tblDonDat.getModel();
        model.setRowCount(0);
        try {
            java.util.Date date = new java.util.Date();
            String timenow = fm.format(date);
            String datenow = DateHelper.toString1(date);
            List<PhieuDat> list = dao.select1(datenow, timenow);
            if (list != null) {
                for (PhieuDat cd : list) {
                    Object[] obj = {
                        cd.getMaPD(),
                        cd.getMaKH(),
                        date_fm.format(cd.getDateBook()),
                        fm.format(cd.getTimeBook()),
                        cd.getSoBan(),
                        cd.getSoNguoi(),
                        cd.getGhiChu(),};
                    model.addRow(obj);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    int MaPD = 0;

    //Code thông tin đơn đặt
    void fillComBoBoxSoBan() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboBanAn.getModel();
        model.removeAllElements();
        try {
            String ngay = DateHelper.toString1(txtNgayDat.getDate());
            String gio = (String) cboTimeBook.getSelectedItem();
            if (tblDonDat.getRowCount() > 0 && index >= 0) {
                MaPD = (int) tblDonDat.getValueAt(this.index, 0);
            }
            String sql = "select SoBan from BanAn where SoBan\n"
                    + "    not in (Select ba.SoBan from BanAn ba join PhieuDat pd on ba.SoBan = pd.SoBan\n"
                    + "			where pd.DateBook = ? and pd.TimeBook = ? and MaPD != ?)";

            ResultSet rs = JdbcHelper.executeQuery(sql, ngay, gio, MaPD);
            while (rs.next()) {
                String a = String.valueOf(rs.getInt("SoBan"));
                model.addElement(a);
            }
        } catch (Exception e) {
        }
    }

    void LoadTableDPH() {
        DefaultTableModel model = (DefaultTableModel) tblDonDat.getModel();
        model.setRowCount(0);
        try {
            List<PhieuDat> list = dao.selectDPH();
            for (PhieuDat cd : list) {
                Object[] obj = {
                    cd.getMaPD(),
                    cd.getMaKH(),
                    date_fm.format(cd.getDateBook()),
                    fm.format(cd.getTimeBook()),
                    cd.getSoBan(),
                    cd.getSoNguoi(),
                    cd.getGhiChu(),};
                model.addRow(obj);
            }
        } catch (Exception e) {
        }
    }

    void LoadTableDTT() {
        DefaultTableModel model = (DefaultTableModel) tblDonDat.getModel();
        model.setRowCount(0);
        try {
            List<PhieuDat> list = dao.selectDTT();
            for (PhieuDat cd : list) {
                Object[] obj = {
                    cd.getMaPD(),
                    cd.getMaKH(),
                    date_fm.format(cd.getDateBook()),
                    fm.format(cd.getTimeBook()),
                    cd.getSoBan(),
                    cd.getSoNguoi(),
                    cd.getGhiChu(),};
                model.addRow(obj);
            }
        } catch (Exception e) {
        }
    }

    void Cbb() {
        int a = cboTrangThai.getSelectedIndex();
        if (a == 0) {
            LoadTable();
            btnHuy.setEnabled(true);
            Clear();
        }
        if (a == 1) {
            LoadTableDPH();
            btnHuy.setEnabled(true);
            btnXacNhan.setEnabled(false);
            Clear();
        }
        if (a == 2) {
            LoadTableDTT();
            btnHuy.setEnabled(false);
            btnXacNhan.setEnabled(false);
            Clear();
        }
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PhieuDat_Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PhieuDat_Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PhieuDat_Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PhieuDat_Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PhieuDat_Form().setVisible(true);
            }
        });
    }

    public boolean check() {
        Pattern soNguoi = Pattern.compile("[0-9]");
        if (lblMaPD.getText().equals("")) {
            DialogHelper.alert(this, "Mời bạn chọn Phiếu đặt");
            return true;
        } else if (txtSoNguoi.getText().equals("")) {
            DialogHelper.alert(this, "Mời bạn ghi số người");
            return true;
        } else if (!soNguoi.matcher(txtSoNguoi.getText()).find()) {
            DialogHelper.alert(this, "Số người không hợp lệ");
            return true;
        }
        return false;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCapNhat;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDSQuaGio;
    private javax.swing.JButton btnDSSapDen;
    private javax.swing.JButton btnHuy;
    private javax.swing.JButton btnTaoHoaDon;
    private javax.swing.JButton btnXacNhan;
    private javax.swing.JComboBox<String> cboBanAn;
    private javax.swing.JComboBox<String> cboTimeBook;
    private javax.swing.JComboBox<String> cboTrangThai;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblHoTen;
    private javax.swing.JLabel lblMaPD;
    private javax.swing.JLabel lblSDT;
    private javax.swing.JLabel lblTrangThai;
    private javax.swing.JTabbedPane tab;
    private javax.swing.JTable tblDonDat;
    private javax.swing.JTextArea txtGhiChu;
    private com.toedter.calendar.JDateChooser txtNgayDat;
    private javax.swing.JTextField txtSoNguoi;
    // End of variables declaration//GEN-END:variables
}
